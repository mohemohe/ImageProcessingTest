<Window x:Class="ImageProcessingTest05.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
		xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
		xmlns:v="clr-namespace:ImageProcessingTest05.Views"
		xmlns:vm="clr-namespace:ImageProcessingTest05.ViewModels"
		Title="ImageProcessingTest05" Width="1280" Height="720" MinWidth="1280" MinHeight="720" Background="{x:Null}" Foreground="{x:Null}" ResizeMode="CanResizeWithGrip">
	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="32" NonClientFrameEdges="None" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
	</WindowChrome.WindowChrome>

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="MainWindowResourceDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>

	<Window.DataContext>
		<vm:MainWindowViewModel/>
	</Window.DataContext>

	<i:Interaction.Triggers>

		<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
		<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
		<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

		<!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
		<i:EventTrigger EventName="ContentRendered">
			<l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
		</i:EventTrigger>

		<!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
		<i:EventTrigger EventName="Closed">
			<l:DataContextDisposeAction/>
		</i:EventTrigger>

		<!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

	</i:Interaction.Triggers>

    <Grid Background="#FF2D2D30" Margin="{Binding WindowMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Name="CaptionBar" Grid.Row="0" WindowChrome.IsHitTestVisibleInChrome="True">
            <Grid.DataContext>
                <vm:CaptionBarViewModel/>
            </Grid.DataContext>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
                </i:EventTrigger>
                <l:InteractionMessageTrigger MessageKey="WindowMessage" Messenger="{Binding Messenger}" InvokeActionsOnlyWhileAttatchedObjectLoaded="True">
                    <l:WindowInteractionMessageAction />
                </l:InteractionMessageTrigger>
            </i:Interaction.Triggers>

            <Label Content="ImageProcessingTest05" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#FFFAFAFF" FontSize="14"/>
            <StackPanel Orientation="Horizontal" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button Content="0" FontFamily="Marlett" Width="28" Height="20" Margin="0,0,1,0" Template="{DynamicResource CaptionButton}" Command="{Binding MinimizeCommand}"/>
                <Button Content="{Binding MaximizeButtonContent}" FontFamily="Marlett" Width="28" Height="20" Margin="0,0,1,0" Template="{DynamicResource CaptionButton}" Command="{Binding MaximizeCommand}"/>
                <Button Content="r" FontFamily="Marlett" Width="48" Height="20" Margin="0" Template="{DynamicResource CloseButton}" Command="{Binding CloseCommand}"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="240"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Image Source="{Binding BigBitmap}" RenderOptions.BitmapScalingMode="Fant"/>
            </Grid>
            <Grid Grid.Row="1" HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ChangeBitmapCommand}" CommandParameter="0" Template="{DynamicResource Button}">
                        <Image Source="{Binding OriginalBitmap}" RenderOptions.BitmapScalingMode="Fant"/>
                    </Button>
                    <Button Command="{Binding ChangeBitmapCommand}" CommandParameter="1" Template="{DynamicResource Button}">
                        <Image Source="{Binding GrayScaleBitmap}" RenderOptions.BitmapScalingMode="Fant"/>
                    </Button>
                    <Button Command="{Binding ChangeBitmapCommand}" CommandParameter="2" Template="{DynamicResource Button}">
                        <Image Source="{Binding BlurBitmap}" RenderOptions.BitmapScalingMode="Fant"/>
                    </Button>
                    <Button Command="{Binding ChangeBitmapCommand}" CommandParameter="3" Template="{DynamicResource Button}">
                        <Image Source="{Binding EdgeBitmap}" RenderOptions.BitmapScalingMode="Fant"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
